# ----------------------------------------
# Backend Debugging & Logging
# ----------------------------------------

# Enables debug mode across the app.
# Should be False in production to avoid exposing sensitive details.
#DEBUG=False

# Minimum severity level of log messages to be output.
# Options:
#   DEBUG    - Most verbose, shows everything (useful for local dev).
#   INFO     - General runtime information (default for production).
#   WARNING  - Things that might be problems in the future.
#   ERROR    - Runtime errors that should be investigated.
#   CRITICAL - Application or system-wide failures.
# Use DEBUG for local development, INFO or WARNING for production.
#LOGGING_LEVEL=INFO

# Format used for application logs.
#   console - Human-readable format, ideal for terminal output.
#   json    - Structured logs, preferred for log ingestion (e.g., ELK, Loki).
#LOGGING_FORMAT=console

# If enabled, logs will also be written to the database in addition to stdout.
# Useful for persistent audit logs or advanced querying.
#LOG_TO_DB=True

# ----------------------------------------
# Backend Server Configuration
# ----------------------------------------

# The IP address the backend server will bind to.
# Common values:
#   0.0.0.0 - Bind to all network interfaces (use in Docker or remote envs).
#   127.0.0.1 - Bind to localhost only (useful for local testing).
#APP_HOST=0.0.0.0

# The port the backend server will listen on.
# Must be an integer between 1 and 65534.
#APP_PORT=8765

# ----------------------------------------
# Database Configuration
# ----------------------------------------

# The full database connection URL used by the backend service to connect
# to PostgreSQL. This should follow the format:
#   dialect+driver://username:password@host:port/database
#   e.g. postgresql+asyncpg://notivae:devpass@postgres/notivae
# If you are using Docker Compose, this should typically point to the
# internal Docker service name (e.g., `postgres`) instead of `localhost`.
DATABASE_URL=postgresql+asyncpg://notivae:devpass@localhost:5432/notivae

# The number of persistent database connections maintained per application worker.
# Increase this value for high-throughput systems with lots of concurrent queries.
#DATABASE_POOL_SIZE=5

# The number of temporary connections that can exceed the pool size during peak usage.
# These "overflow" connections are not persistent and will be discarded after use.
#DATABASE_POOL_MAX_OVERFLOW=10

# Maximum time (in seconds) to wait for a database connection before failing.
# Prevents application hangs under connection saturation or DB outage.
#DATABASE_POOL_TIMEOUT=30

# Time (in seconds) after which idle database connections will be recycled.
# Helps prevent stale or broken connections in long-lived environments.
#DATABASE_POOL_RECYCLE=1800

# ----------------------------------------
# PostgreSQL Container Configuration (Docker Compose)
# ----------------------------------------

# The username that will be created in the Postgres container.
# This must match the user part of DATABASE_URL.
POSTGRES_USER=notivae

# The password assigned to POSTGRES_USER.
# Used for authenticating from the backend or any external tool.
# This must match the password part of DATABASE_URL.
POSTGRES_PASSWORD=devpass

# The name of the default database that will be created in the container.
# This must match the database name in DATABASE_URL.
POSTGRES_DB=notivae

# ----------------------------------------
# OpenID Connect Identity Provider Config
# ----------------------------------------

# The client ID issued by your OpenID Connect provider (e.g. Auth0, Keycloak, etc.).
# This must match the client configured in the identity provider dashboard.
#OIDC_CLIENT_ID=your-client-id

# The client secret corresponding to the OIDC client.
# Keep this value secret and never commit it to version control.
#OIDC_CLIENT_SECRET=your-client-secret

# URI where users are redirected to authorize the application.
#OIDC_AUTH_URI=https://example.com/oauth2/authorize

# URI used to exchange the authorization code for tokens.
#OIDC_TOKEN_URI=https://example.com/oauth2/token

# URI used to fetch authenticated user information.
#OIDC_USER_INFO_URI=https://example.com/oauth2/userinfo

# URI to redirect users after logout (optional for some providers).
#OIDC_LOGOUT_URI=https://example.com/oauth2/logout

# Name shown in the UI for this login option (e.g. "Authentik", "My Company SSO").
#OIDC_DISPLAY_NAME=OpenID

# Scopes to request during authentication.
# Adjust depending on the level of access your app needs.
#OIDC_SCOPES="openid profile email"

# ----------------------------------------
# GZip Compression Configuration
# ----------------------------------------

# Minimum size in bytes a response must reach before gzip compression is applied.
# This helps avoid wasting CPU cycles compressing small payloads that won't benefit.
#GZIP_COMPRESSION_MINIMUM_SIZE=1000

# Compression level to use when gzip is enabled.
# 1 = Fastest, lowest compression ratio.
# 9 = Slowest, highest compression ratio.
# 6 is the recommended default for balanced performance.
#GZIP_COMPRESSION_LEVEL=6
